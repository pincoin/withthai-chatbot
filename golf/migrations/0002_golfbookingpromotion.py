# Generated by Django 3.1 on 2020-09-02 05:00

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields


class Migration(migrations.Migration):

    dependencies = [
        ('golf', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='GolfBookingPromotion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('title', models.CharField(max_length=255, verbose_name='Promotion title')),
                ('promotion_start', models.DateField(verbose_name='Promotion start date')),
                ('promotion_end', models.DateField(verbose_name='Promotion end date')),
                ('active', models.BooleanField(default=True, verbose_name='Promotion active')),
                ('condition_monday', models.BooleanField(blank=True, null=True, verbose_name='Monday condition')),
                ('condition_tuesday', models.BooleanField(blank=True, null=True, verbose_name='Tuesday condition')),
                ('condition_wednesday', models.BooleanField(blank=True, null=True, verbose_name='Wednesday condition')),
                ('condition_thursday', models.BooleanField(blank=True, null=True, verbose_name='Thursday condition')),
                ('condition_friday', models.BooleanField(blank=True, null=True, verbose_name='Friday condition')),
                ('condition_saturday', models.BooleanField(blank=True, null=True, verbose_name='Saturday condition')),
                ('condition_sunday', models.BooleanField(blank=True, null=True, verbose_name='Sunday condition')),
                ('condition_holiday', models.BooleanField(blank=True, null=True, verbose_name='Holiday condition')),
                ('condition_time_start', models.TimeField(blank=True, null=True, verbose_name='Time start condition')),
                ('condition_time_end', models.TimeField(blank=True, null=True, verbose_name='Time end condition')),
                ('condition_pax', models.IntegerField(blank=True, null=True, verbose_name='PAX condition')),
                ('condition_cart', models.IntegerField(blank=True, null=True, verbose_name='Cart condition')),
                ('discount_fee', models.IntegerField(choices=[(0, 'Green fee'), (1, 'Caddie fee'), (2, 'Cart fee'), (3, 'Total amount')], db_index=True, default=0, verbose_name='Discount fee')),
                ('discount_method', models.IntegerField(choices=[(0, 'Percent'), (1, 'Minus'), (2, 'Set')], db_index=True, default=0, verbose_name='Discount method')),
                ('discount_amount', models.DecimalField(decimal_places=7, default=0, max_digits=10, verbose_name='Discount amount')),
                ('customer_group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='golf.customergroup', verbose_name='Customer group condition')),
                ('golf_club', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='golf.golfclub', verbose_name='Golf club')),
            ],
            options={
                'verbose_name': 'Golf booking promotion',
                'verbose_name_plural': 'Golf booking promotions',
            },
        ),
    ]
